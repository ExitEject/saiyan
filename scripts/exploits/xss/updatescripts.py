import os
import re
import sys

def replace_ip_in_file(file_path, new_ip):
    # Regular expression to match IP addresses
    ip_pattern = re.compile(r'\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b')
    
    try:
        # Read the file content
        with open(file_path, 'r') as file:
            content = file.read()
        
        # Replace all occurrences of IP addresses with the new IP
        new_content = ip_pattern.sub(new_ip, content)
        
        # Write the updated content back to the file
        with open(file_path, 'w') as file:
            file.write(new_content)
            
        print(f"Updated IP addresses in file: {file_path}")
    
    except Exception as e:
        print(f"Error processing file {file_path}: {e}")

def main():
    # Check if the user provided an IP address
    if len(sys.argv) != 2:
        print("Usage: python3 updatescripts.py <new_ip_address>")
        return
    
    new_ip = sys.argv[1].strip()
    
    # Validate the IP address format
    if not re.match(r'^\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b$', new_ip):
        print("Invalid IP address format.")
        return
    
    # Iterate over all files in the current directory
    for filename in os.listdir('.'):
        # Process only files (not directories)
        if os.path.isfile(filename):
            replace_ip_in_file(filename, new_ip)

if __name__ == '__main__':
    main()
